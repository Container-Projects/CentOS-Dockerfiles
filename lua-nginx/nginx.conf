worker_processes  8;
error_log logs/error.log;
events {
  use epoll;
  worker_connections 1024;
}
http {
  server {
  resolver 8.8.8.8;
        resolver_timeout 5s;
        listen 8080;
        location / {
            proxy_pass $scheme://$host$request_uri;
            proxy_set_header Host $http_host;

            proxy_buffers 256 4k;
            proxy_max_temp_file_size 0;

            proxy_connect_timeout 30;

            proxy_cache_valid 200 302 1m;
            proxy_cache_valid 301 1h;
            proxy_cache_valid any 1m;

        }

        location /hello {
            default_type text/html;
            content_by_lua '
                ngx.say("<p>hello, world</p>")
            ';
        }

        location /test {
            content_by_lua '
            local shell = require("resty.shell")

            local args = {
               socket = "unix:/tmp/shell.sock",
            }

            local status, out, err = shell.execute("uname -a", args)

            ngx.header.content_type = "text/plain"
            ngx.say(out)
           ';
       }
    }
    server {
      listen                         3128;
      resolver                       8.8.8.8;
      # forward proxy for CONNECT request
      proxy_connect;
      proxy_connect_allow            443 563;
      proxy_connect_connect_timeout  10s;
      proxy_connect_read_timeout     10s;
      proxy_connect_send_timeout     10s;
      # forward proxy for non-CONNECT request
      location / {
        proxy_pass http://$host;
        proxy_set_header Host $host;
        }
    }
}
